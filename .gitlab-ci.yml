cache:
  key: "$CI_BUILD_REF_NAME node:8-alpine"
  paths:
    - node_modules/

stages:
  - build
  - release
  - deploy

build:
  stage: build
  image: node:8-alpine
  variables:
    NODE_ENV: "production"
  before_script:
    - echo $FOXENV | base64 -d > .env
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
     - server/
     - public/
  only:
    - site

release:
  stage: release
  image: docker:latest
  only:
    - "site"
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: "overlay"
  before_script:
    - docker version
    - "docker info"
    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
    - "docker build -t registry.gitlab.com/rtexel/fox:latest --pull ."
    - "docker push registry.gitlab.com/rtexel/fox:latest"
  after_script:
    - "docker logout registry.gitlab.com/"

deploy:
  stage: deploy
  image: gitlab/dind:latest
  only:
    - "site"
  environment: production
  services:
    - docker:dind
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
  script:
    - scp -r ./environment.env ./docker-compose.autodeploy.yml root@${SERVER_IP}:~/
    - ssh root@$DEPLOYMENT_SERVER_IP "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; docker-compose -f docker-compose.autodeploy.yml stop; docker-compose -f docker-compose.autodeploy.yml rm web --force; docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest; docker-compose -f docker-compose.autodeploy.yml up -d"
